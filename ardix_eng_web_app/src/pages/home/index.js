/* 
       e                   888 ,e,                 e88~~\                                     
      d8b     888-~\  e88~\888  "  Y88b  /        d888     888-~\  e88~-_  888  888 888-~88e  
     /Y88b    888    d888  888 888  Y88b/         8888 __  888    d888   i 888  888 888  888b 
    /  Y88b   888    8888  888 888   Y88b         8888   | 888    8888   | 888  888 888  8888 
   /____Y88b  888    Y888  888 888   /Y88b        Y888   | 888    Y888   ' 888  888 888  888P 
  /      Y88b 888     "88_/888 888  /  Y88b        "88__/  888     "88_-~  "88_-888 888-_88"  
  ðŸ“£ Version BETA - Xlator & SkyX [ID FR] - CopyrightÂ© 2023                         88   
.
*/

import { useEffect, useState } from "react";
import { getStorage, ref, deleteObject } from "firebase/storage";
import { logout, useAuth, upload } from "../config/FirebaseConfig.js";
import Head from 'next/head';
import { useRouter } from 'next/navigation';

export default function Profile() {
    const storage = getStorage();
    const { push } = useRouter();
    const currentUser = useAuth();
    const [photo, setPhoto] = useState(null);
    const [loading, setLoading] = useState(false);
    const [photoURL, setPhotoURL] = useState("https://images.nightcafe.studio//assets/profile.png");
    const [error, setError] = useState(false);
    /* âœ¨ The source link of the image of the user profile picture was replaced by the one of the actual Firebase's Database : âœ¨ */
    useEffect(() => { if (currentUser?.photoURL) { setPhotoURL(currentUser.photoURL); }  }, [currentUser]);

    /* ðŸ“¦ Referring to the upload file functions : ðŸ“¦ */
    function UploadNewPictureChange() { upload(photo, currentUser, setLoading); }
    function UploadNewPictureChange(e) {
        if (e.target.files[0]) {
            setPhoto(e.target.files[0]);
        } 
    }

    /* ðŸ’¨ Simple function to Logout the actual user (in browser cookies) : ðŸ’¨ */
    async function Logout() {
        setLoading(true);
        try {
          await logout();
        } catch {
          alert("Error!");
        }
        setLoading(false);
        push('/');
    }

    /* ðŸ”´ Function to remove the actual user profile picture : ðŸ”´ */
    function RemovePhoto() {
        const desertRef = ref(storage, photoURL);
        if (currentUser?.photoURL) {
            deleteObject(desertRef).then(() => {
                alert("Ta photo a bien Ã©tÃ© supprimÃ© !");
                window.location.reload();
            }).catch((error) => {
                console.log(error);
            });
        } else {
            alert("On peut pas supprimer ta photo de profil, tu en as pas ! Mets en une et on verra aprÃ¨s !")
        }
    }

    return (
        <>
            <Head>
                <title>HOME PAGE</title>
                <meta name="description" content="Generated by create next app"/>
                <meta name="viewport" content="width=device-width, initial-scale=1"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>

            {!currentUser && 
                <>vous n'Ãªtes pas connectÃ©</>
            }
            {currentUser && 
                <>
                    <div className="fields">
                        <input type="file" onChange={UploadNewPictureChange}/>
                        <button disabled={loading || !photo} onClick={UploadNewPictureChange}>Upload</button>
                        <button onClick={RemovePhoto}>Remove your photo</button>

                        {error ? (
                            <img src="https://images.nightcafe.studio//assets/profile.png" alt="avatar" onError={() => setError(true)} className="avatar"/>
                        ) : (
                            <img src={photoURL} alt="avatar" onError={() => setError(true)} className="avatar"/>
                        )}

                        <div>Currently logged in as: {currentUser.email}</div>
                        <button disabled={loading} onClick={Logout}>Log Out</button>
                    </div>
                </>
            }
        </>
    )
}